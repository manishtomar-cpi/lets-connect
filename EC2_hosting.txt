
Step-by-Step Guide to Hosting an Application on AWS EC2

1. Launch an EC2 Instance
1. Log in to AWS Management Console:
   - Open your browser and go to the [AWS Management Console](https://aws.amazon.com/console/).
   - Log in with your AWS credentials.
2. Launch a New EC2 Instance:
   - Navigate to EC2 Dashboard.
   - Click on Launch Instance.
   - Choose an Amazon Machine Image (AMI), e.g., Ubuntu 24.04 LTS.
   - Select an instance type, e.g., t2.micro (Free Tier eligible).
   - Configure instance details (default settings are usually fine).
   - Add storage if necessary (default is typically enough).
   - Add Tags (optional): Add a tag to name your instance, e.g., `Name=MyAppServer`.
   - Configure Security Group:
     - Create a new security group.
     - Add a rule to allow SSH access (port 22) and HTTP access (port 3000).
     - Example:
       - Type: HTTP, **Protocol:** TCP, **Port Range:** 3000, **Source:** 0.0.0.0/0 (This allows access from any IP, modify for security needs).
   - Review and launch the instance.
   - Choose an existing key pair or create a new one to connect to your instance.

 2. Connect to Your EC2 Instance
1. Open a Terminal (Linux/Mac) or PowerShell (Windows):
   - Use the SSH command provided by AWS to connect to your instance.
   - Example:
    bash/command prompt
     ssh -i "path/to/your-key.pem" ubuntu@your-ec2-public-ip

2. If prompted, accept the connection by typing `yes`.

3. Update the System
1. Update and upgrade the packages:
   sudo apt-get update && sudo apt-get upgrade -y

4. Install Node.js and npm
1. Install Node.js and npm:
   sudo apt-get install -y nodejs npm

5. Clone Your Application Repository
1. Install Git (if not installed):
   sudo apt-get install git -y
2. Clone your repository:
   git clone https://github.com/your-repo/your-app.git
3. Navigate to your application directory:
   cd your-app
6. Install Application Dependencies
1. Install the required Node.js packages:
   npm install

7. Build Your Application
1. Build the application for production (if applicable):
   npm run build
   - This command compiles your application into an optimized format for production deployment. Itâ€™s common for React, Angular, or similar frameworks.

8. Install and Configure PM2
1. Install PM2 globally:
   sudo npm install -g pm2

2. Start your application using PM2:
   pm2 start npm --name "lets-connect" -- start
   - This command tells PM2 to run the `npm start` command, names the process "lets-connect", and keeps it running in the background.

3. Save the PM2 process list:
   pm2 save

4. Set PM2 to start on system boot:
   pm2 startup
   - Follow the instructions provided after running the command to complete the setup.

9. Access Your Application
1. In your browser, go to:
   http://your-ec2-public-ip:3000
   - Replace `your-ec2-public-ip` with the public IP of your EC2 instance.







Important PM2 Commands

1. Check the Status of PM2 Processes:
   pm2 status
   - This command lists all PM2 managed processes with their current status.

2. Restart the Application:
   pm2 restart lets-connect
   - This command restarts the application named "lets-connect".

3. Stop the Application:
   pm2 stop lets-connect
   - This command stops the application named "lets-connect".

4. Delete the Application from PM2:
   pm2 delete lets-connect
   - This command removes the application named "lets-connect" from PM2.

5. View Logs:
   pm2 logs lets-connect
   - This command displays the logs for the "lets-connect" application.

6. Monitor the Application:
   pm2 monit
   - This opens a real-time monitoring interface for all PM2 processes.



7. Start All Saved Processes:
   pm2 resurrect
   - This command restores all processes that were saved with `pm2 save`.

8. List All PM2 Processes:
   pm2 list
   - This command lists all processes managed by PM2.

This comprehensive guide now includes all necessary steps to build, deploy, and manage your application on AWS EC2 using PM2.
